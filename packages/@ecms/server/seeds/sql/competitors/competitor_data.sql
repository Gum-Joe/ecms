-- *************** SqlDBM: PostgreSQL ****************;
-- ***************************************************;


-- ************************************** "public".competitor_data

CREATE TABLE "public".competitor_data
(
 competitor_data_id     bigint NOT NULL DEFAULT gen_random_uuid(),
 competitor_id          int NOT NULL,
 stored_data            decimal NULL,
 points                 decimal NOT NULL DEFAULT 0,
 additional_data        jsonb NULL,
 overriden              boolean NOT NULL DEFAULT false,
 competitor_settings_id uuid NOT NULL,
 dnf                    boolean NOT NULL DEFAULT false,
 CONSTRAINT PK_competitor_data PRIMARY KEY ( competitor_data_id ),
 CONSTRAINT FK_competitors_to_data FOREIGN KEY ( competitor_id ) REFERENCES "public".competitors ( competitor_id ),
 CONSTRAINT FK_comp_settings_to_data FOREIGN KEY ( competitor_settings_id ) REFERENCES "public".competitor_settings ( competitor_settings_id )
);

CREATE INDEX fkIdx_339 ON "public".competitor_data
(
 competitor_id
);

CREATE INDEX fkIdx_350 ON "public".competitor_data
(
 competitor_settings_id
);

COMMENT ON TABLE "public".competitor_data IS 'Actual data for competitors, such as how they have performed,, point and any additional data added by points systems (extensions).';

COMMENT ON COLUMN "public".competitor_data.points IS 'Calculated points for this competitor';
COMMENT ON COLUMN "public".competitor_data.additional_data IS 'Additional data generated by points systems.';
COMMENT ON COLUMN "public".competitor_data.overriden IS 'Set to true if any of points or additional_data have been manually overridden in the GUI. This causes the calculator to skip calculating here.';
COMMENT ON COLUMN "public".competitor_data.competitor_settings_id IS 'Matches the competitor indirectly back to an event/group via its competitor settings';
COMMENT ON COLUMN "public".competitor_data.dnf IS 'Did not finish - set this to true if the competitor did not finish the event data is being recorded for.';




